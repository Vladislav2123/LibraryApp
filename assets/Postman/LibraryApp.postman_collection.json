{
	"info": {
		"_postman_id": "7ba6e301-62fe-4560-b4af-ef9f3bac4f5a",
		"name": "LibraryApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28536806"
	},
	"item": [
		{
			"name": "Login Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var json = pm.response.json();\r",
							"    pm.environment.set(\"userId\", json.userId)\r",
							"    pm.environment.set(\"token\", json.token);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"adminmail@gmail.com\",\r\n    \"password\": \"Admin12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"User 1\",\r\n    \"email\": \"usermail1@gmail.com\",\r\n    \"password\": \"User1Password\",\r\n    \"birthDate\": \"2000-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var json = pm.response.json();\r",
							"    pm.environment.set(\"userId\", json.userId)\r",
							"    pm.environment.set(\"token\", json.token);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"testing@gmail.com\",\r\n    \"password\": \"Password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"User 2\",\r\n    \"email\": \"usermail2@gmail.com\",\r\n    \"password\": \"Password2\",\r\n    \"birthDate\": \"2000-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var json = pm.response.json();\r",
							"    pm.environment.set(\"userId\", json.userId)\r",
							"    pm.environment.set(\"token\", json.token);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"usermail2@gmail.com\",\r\n    \"password\": \"Password2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"{{userId}}\",\r\n    \"name\": \"User updated\",\r\n    \"email\": \"usermailupdated@gmail.com\",\r\n    \"birthDate\": \"2000-01-01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Avatar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "avatarFile",
							"description": "Select \"User Avatar.png\" file from assets/Postman or another image",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/:id/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id",
						"avatar"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Role (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "role",
							"value": "Default",
							"type": "text"
						},
						{
							"key": "role",
							"value": "Admin",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/role",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"role"
					],
					"variable": [
						{
							"key": "userId",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Avatar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"avatar"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						""
					],
					"query": [
						{
							"key": "search",
							"value": "Vladislav",
							"disabled": true
						},
						{
							"key": "sortColumn",
							"value": "birth",
							"disabled": true
						},
						{
							"key": "sortOrder",
							"value": "",
							"disabled": true
						},
						{
							"key": "page",
							"value": "",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Author (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var json = pm.response.json();\r",
							"    pm.environment.set(\"authorId\", json);\r",
							"    console.log(\"New Author Id: \" + json);\r",
							"}\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Robert\",\r\n    \"birthDate\": \"1972-01-01\"   // nullable\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/authors/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/authors/:authorId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						":authorId"
					],
					"variable": [
						{
							"key": "authorId",
							"value": "{{authorId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author  (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"authorId\": \"{{authorId}}\",\r\n    \"name\": \"Robert Martin\",\r\n    \"birthDate\": \"1972-01-01\"   // nullable\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/authors/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Author Avatar (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "avatarFile",
							"description": "Select \"Robert Martin.jpeg\" file from assets/Postman",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/authors/:authorId/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						":authorId",
						"avatar"
					],
					"variable": [
						{
							"key": "authorId",
							"value": "{{authorId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author Avatar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/authors/:authorId/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						":authorId",
						"avatar"
					],
					"variable": [
						{
							"key": "authorId",
							"value": "{{authorId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors"
					],
					"query": [
						{
							"key": "search",
							"value": "",
							"disabled": true
						},
						{
							"key": "page",
							"value": "1",
							"disabled": true
						},
						{
							"key": "size",
							"value": "20",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Book (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var json = pm.response.json();\r",
							"    pm.environment.set(\"bookId\", json);\r",
							"    console.log(\"New Book Id: \" + json);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "authorId",
							"value": "{{authorId}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Clean Code:",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Even bad code can function...",
							"type": "text"
						},
						{
							"key": "year",
							"value": "1850",
							"type": "text"
						},
						{
							"key": "contentFile",
							"description": "Select \"Robert Martin Clean Code.pdf\" file from assets/Postman",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId/content",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId",
						"content"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "bookId",
							"value": "{{bookId}}",
							"type": "text"
						},
						{
							"key": "authorId",
							"value": "{{authorId}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Clean Code: A Handbook of Agile Software Craftsmanship",
							"type": "text"
						},
						{
							"key": "description",
							"value": "Even bad code can function. But if code isn’t clean, it can bring a development organization to its knees. Every year, countless hours and significant resources are lost because of poorly written code. But it doesn’t have to be that way...",
							"type": "text"
						},
						{
							"key": "year",
							"value": "2008",
							"type": "text"
						},
						{
							"key": "contentFile",
							"description": "nullable",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Book Cover (Admin only)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "coverFile",
							"description": "Select \"Book Cover.jpg\" from assets/Postman",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId/cover",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId",
						"cover"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book Cover",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId/cover",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId",
						"cover"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books"
					],
					"query": [
						{
							"key": "search",
							"value": "",
							"disabled": true
						},
						{
							"key": "sortColumn",
							"value": "",
							"disabled": true
						},
						{
							"key": "sortOrder",
							"value": "",
							"disabled": true
						},
						{
							"key": "page",
							"value": "",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"disabled": true
						},
						{
							"key": "author",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Read Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/read-books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"read-books",
						":bookId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						},
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Read Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/read-books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"read-books"
					],
					"query": [
						{
							"key": "page",
							"value": null,
							"disabled": true
						},
						{
							"key": "size",
							"value": null,
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"if(responseBody && responseCode.code >= 200 && responseCode.code < 300) {\r",
							"    var response = pm.response.json();\r",
							"    pm.environment.set(\"reviewId\", response);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"bookId\": \"{{bookId}}\",\r\n    \"rating\": 4,\r\n    \"title\": \"Good\"    // nullable\r\n    //\"comment\": \"Like it because..\"      // nullable\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"reviewId\": \"{{reviewId}}\",\r\n    \"rating\": 5,\r\n    \"title\": \"Cool book!\"    // nullable\r\n    //\"comment\": \"\"      // nullable\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Reviews",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"reviews"
					],
					"query": [
						{
							"key": "page",
							"value": null,
							"disabled": true
						},
						{
							"key": "size",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Book Reviews",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId",
						"reviews"
					],
					"query": [
						{
							"key": "sortColumn",
							"value": "",
							"disabled": true
						},
						{
							"key": "sortOrder",
							"value": "",
							"disabled": true
						},
						{
							"key": "page",
							"value": "",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Reviews",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"reviews"
					],
					"query": [
						{
							"key": "sortColumn",
							"value": "",
							"disabled": true
						},
						{
							"key": "sortOrder",
							"value": "",
							"disabled": true
						},
						{
							"key": "page",
							"value": "",
							"disabled": true
						},
						{
							"key": "size",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/reviews/:reviewId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"reviews",
						":reviewId"
					],
					"variable": [
						{
							"key": "reviewId",
							"value": "{{reviewId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Read Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/read-books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"read-books",
						":bookId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						},
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Book Cover",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId/cover",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId",
						"cover"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/books/:bookId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "{{bookId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author Avatar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/authors/:authorId/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						":authorId",
						"avatar"
					],
					"variable": [
						{
							"key": "authorId",
							"value": "{{authorId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/authors/:authorId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"authors",
						":authorId"
					],
					"variable": [
						{
							"key": "authorId",
							"value": "{{authorId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Avatar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:userId/avatar",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":userId",
						"avatar"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Other User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7025",
			"type": "string"
		}
	]
}